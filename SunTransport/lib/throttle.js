// Generated by CoffeeScript 1.6.3
(function() {
  var Throttler, events, util;

  util = require('util');

  events = require('events');

  exports.Throttler = Throttler = function(concurrency) {
    var done, doneFn, next, nextFn, numRunning, queue;
    this.queue = queue = [];
    numRunning = 0;
    doneFn = function(throttle) {
      return function() {
        return throttle.emit('done');
      };
    };
    nextFn = function(throttle) {
      return function() {
        return throttle.emit('next');
      };
    };
    done = doneFn(this);
    next = nextFn(this);
    this.on('next', function() {
      var callback;
      if (queue.length > 0 && numRunning < concurrency) {
        numRunning++;
        callback = queue.shift();
        callback(done);
      }
      return util.log('[Throttler] Running: ' + numRunning + "; Pending: " + queue.length + "; Allowed: " + concurrency);
    });
    this.on('done', function() {
      numRunning--;
      return next();
    });
    return this;
  };

  util.inherits(Throttler, events.EventEmitter);

  Throttler.prototype.add = function(callback) {
    this.queue.push(callback);
    return this.emit('next');
  };

}).call(this);
